name: 编译Android项目生成APK

on:
  workflow_dispatch:  # 允许手动触发工作流
    inputs:
      buildType:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release
      versionSuffix:
        description: 'Optional suffix for version name'
        required: false
        type: string

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: 初始化JDK
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle
    
    - name: Gradle提权
      run: chmod +x gradlew
    
    # 根据输入参数构建相应类型的APK
    - name: 构建APK
      run: ./gradlew assemble${{ github.event.inputs.buildType }}
      
    # 设置环境变量，获取版本信息
    - name: 获取版本信息
      id: app_version
      run: |
        # 提取版本号（使用单引号命令，避免 YAML 冲突）
        VERSION=$(grep -E 'versionName[[:space:]]+"[^"]+"' app/build.gradle | awk -F'"' '{print $2}')
        
        # 如果提取失败，尝试单引号格式
        if [ -z "$VERSION" ]; then
          VERSION=$(grep -E "versionName[[:space:]]+'[^']+'" app/build.gradle | awk -F"'" '{print $2}')
        fi
        
        # 错误处理
        if [ -z "$VERSION" ]; then
          VERSION="1.0.0"
          echo "警告: 无法从 build.gradle 中提取版本号，使用默认版本 $VERSION"
        fi
        
        # 添加可选后缀
        if [ ! -z "${{ github.event.inputs.versionSuffix }}" ]; then
          VERSION="${VERSION}-${{ github.event.inputs.versionSuffix }}"
        fi
        
        # 输出到环境变量
        echo "version=$VERSION" >> $GITHUB_ENV
        echo "tag=v$VERSION" >> $GITHUB_ENV
        
    - name: 准备创建 Release
      run: |
        echo "准备创建 Release:"
        echo "标签: ${{ env.tag }}"
        echo "版本: ${{ env.version }}"
        echo "=== APK目录内容 ==="
        ls -la app/build/outputs/apk/release
        echo "=== 结束 ==="
        echo "GITHUB_REF: ${{ github.ref }}"
        echo "GITHUB_SHA: ${{ github.sha }}"
    
    - name: 创建 Release 并上传 APK
      if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.buildType == 'release')
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ env.tag }}
        name: Release ${{ env.tag }}
        draft: false
        prerelease: false
        files: |
          app/build/outputs/apk/${{ github.event.inputs.buildType }}/*.apk  # 匹配所有 APK
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
